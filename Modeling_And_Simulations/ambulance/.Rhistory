set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$waiting_time))
}) %>% unlist()
result
print(paste("On 16 runs all the demand was cover with ", AMBULANCE_NUMBER," ambulances on ", sum(result == 0), " times"))
col <- c(1,2,3)
col <- c(1,2,3, 4)
table_result <- matrix(result,ncol=2,byrow=TRUE)
colnames(table_result) <- ("col1", "col2")
colnames(table_result) <- c("col1", "col2")
mean(table_result$col1)
mean(table_result["col1"])
table_result
mean(table_result[.,"col1"])
mean(table_result[,"col1"])
table_result <- matrix(c,ncol=2,byrow=TRUE)
table_result <- matrix(col,ncol=2,byrow=TRUE)
colnames(table_result) <- c("col1", "col2")
table_result
mean(table_result[,"col1"])
1 != 9
library(simmer)
library(magrittr)
library(parallel)
set.seed(1541)
hospital <- simmer()
AMBULANCE_NUMBER <- 7
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 10000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
View(table)
View(table)
View(table)
library(simmer)
library(magrittr)
library(parallel)
set.seed(1541)
hospital <- simmer()
AMBULANCE_NUMBER <- 7
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 6000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
tail(table&end_time)
tail(table$end_time)
table
table$end_time[length(table$end_time)]
#################################################################################################################################
################################################# PART C ########################################################################
#################################################################################################################################
AMBULANCE_NUMBER <- 1
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
table_result
table
AMBULANCE_NUMBER <- 1
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", table_result[, 1], " Mean percetage of calls that must wait: ", table_result[, 2],
" Mean activity time: ", table_result[, 3]))
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
simulation <- function(AMBULANCE_NUMBER)
simulation(1)
simulation(2)
simulation <- function(AMBULANCE_NUMBER)
simulation(1)
simulation(1)
#################################################################################################################################
################################################# PART C ########################################################################
#################################################################################################################################
AMBULANCE_NUMBER <- 1
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
#################################################################################################################################
################################################# PART C ########################################################################
#################################################################################################################################
AMBULANCE_NUMBER <- 1
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
AMBULANCE_NUMBER <- 2
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
AMBULANCE_NUMBER <- 3
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
AMBULANCE_NUMBER <- 4
seeds <- c(1541, 1625, 1365, 1785, 1521, 1451, 1121, 1681, 1781, 1411, 1321, 1544, 1521, 1235, 1327,1000)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
hospital <- simmer()
call_1 <-
trajectory("Call Trajectory 1") %>%
set_attribute("strat_time_1", function (){now(hospital)}) %>%
set_attribute("activity_time_1", function (){runif(1, 10, 14)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_1")}) %>%
release("ambulance")
call_2 <-
trajectory("Call Trajectory 2") %>%
set_attribute("strat_time_2", function (){now(hospital)}) %>%
set_attribute("activity_time_2", function (){runif(1, 20, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_2")}) %>%
release("ambulance")
call_3 <-
trajectory("Call Trajectory 3") %>%
set_attribute("strat_time_3", function (){now(hospital)}) %>%
set_attribute("activity_time_3", function (){runif(1, 10, 30)}) %>%
seize("ambulance") %>%
timeout(function() {get_attribute(hospital, "activity_time_3")}) %>%
release("ambulance")
hospital <-
simmer("hospital") %>%
add_resource("ambulance", AMBULANCE_NUMBER) %>%
add_generator("call_1", call_1, function() {c(0, runif(74, 5, 25), -1)}) %>%
add_generator("call_2", call_2, function() {c(runif(63, 5, 25), -1)}) %>%
add_generator("call_3", call_3, function() {c(runif(362, 5, 25), -1)})
hospital %>% run(until = 100000000000)
table <-
hospital %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(mean(table$waiting_time), sum(table$waiting_time != 0) / 500, sum(table$activity_time) / table$end_time[length(table$end_time)])
}) %>% unlist()
result
table_result <- matrix(result,ncol=3,byrow=TRUE)
print(paste("Mean waiting time: ", mean(table_result[, 1]), " Mean percetage of calls that must wait: ", mean(table_result[, 2]) * 100,
" Mean activity time: ", mean(table_result[, 3]) * 100))
library(simmer)
library(magrittr)
library(parallel)
seeds <- c(393943, 100005, 777999555, 319999772, 4544, 55454, 5468, 6554, 7945, 545121, 7455, 554, 78955, 232554, 58515, 54955)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
pier <- simmer() %>%
add_resource("crane", 2)
# Create Trajeectory Boat with 3 subtrajectories, one when there are not boats on servers,
# another when there are only one and a third one when both servers are busy
boat <- trajectory() %>%
branch(option = function() get_server_count(pier, "crane") + 1, continue = c(T, T, T),
trajectory("Boat Trajectory 1") %>%
trap("WARNING",
handler = trajectory() %>%
timeout(function(){  (get_attribute(pier, "activity_time1") - now(pier)) * 2  })
) %>%
set_attribute("strat_time1", function (){now(pier)}) %>%
set_attribute("multiplier1", function (){1 / 2}) %>%
set_attribute("activity_time1", function (){get_attribute(pier, "multiplier1") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time1")}) %>%
release("crane") %>%
log_("finishing trajectory number 1"),
trajectory("Boat Trajectory 2") %>%
send("WARNING") %>%
set_attribute("strat_time2", function (){now(pier)}) %>%
set_attribute("multiplier2", function (){1}) %>%
set_attribute("activity_time2", function (){get_attribute(pier, "multiplier2") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time2")}) %>%
release("crane") %>%
log_("finishing trajectory number 2"),
trajectory("Boat Trajectory 3") %>%
set_attribute("strat_time3", function (){now(pier)}) %>%
set_attribute("multiplier3", function (){1}) %>%
set_attribute("activity_time3", function (){get_attribute(pier, "multiplier3") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time3")}) %>%
release("crane") %>%
log_("finishing trajectory number 3")
)
pier <-
simmer("pier") %>%
add_resource("crane", 2) %>%
add_generator("boat", boat, function() {c(0, rexp(9, 1/1.25), -1)})
pier %>% run(until = 90)
table <-
pier %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$finished), mean(table$waiting_time), max(table$waiting_time), min(table$waiting_time), mean(table$activity_time), max(table$activity_time), min(table$activity_time))
}) %>% unlist()
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats     ",
"Mean waiting time     ", "Maximum waiting time     ",
"Minimum waiting time     ", "Mean download time     ",
"Maximum download time     ", "Minimum download time     ")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- as.table(table_result)
# Table of results.
table_result
