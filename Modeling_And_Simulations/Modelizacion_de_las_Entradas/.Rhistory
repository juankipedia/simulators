table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats     ",
"Mean waiting time     ", "Maximum waiting time     ",
"Minimum waiting time     ", "Mean download time     ",
"Maximum download time     ", "Minimum download time     ")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- as.table(table_result)
# Table of results.
table_result
View(table)
# Table of results.
table_result <- as.data.frame(table_result)
View(table_result)
View(table)
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
library(simmer)
library(magrittr)
library(parallel)
seeds <- c(393943, 100005, 777999555, 319999772, 4544, 55454, 5468, 6554, 7945, 545121, 7455, 554, 78955, 232554, 58515, 54955)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
pier <- simmer() %>%
add_resource("crane", 2)
# Create Trajeectory Boat with 3 subtrajectories, one when there are not boats on servers,
# another when there are only one and a third one when both servers are busy
boat <- trajectory() %>%
branch(option = function() get_server_count(pier, "crane") + 1, continue = c(T, T, T),
trajectory("Boat Trajectory 1") %>%
trap("WARNING",
handler = trajectory() %>%
timeout(function(){  (get_attribute(pier, "activity_time1") - now(pier)) * 2  })
) %>%
set_attribute("strat_time1", function (){now(pier)}) %>%
set_attribute("multiplier1", function (){1 / 2}) %>%
set_attribute("activity_time1", function (){get_attribute(pier, "multiplier1") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time1")}) %>%
release("crane") %>%
log_("finishing trajectory number 1"),
trajectory("Boat Trajectory 2") %>%
send("WARNING") %>%
set_attribute("strat_time2", function (){now(pier)}) %>%
set_attribute("multiplier2", function (){1}) %>%
set_attribute("activity_time2", function (){get_attribute(pier, "multiplier2") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time2")}) %>%
release("crane") %>%
log_("finishing trajectory number 2"),
trajectory("Boat Trajectory 3") %>%
set_attribute("strat_time3", function (){now(pier)}) %>%
set_attribute("multiplier3", function (){1}) %>%
set_attribute("activity_time3", function (){get_attribute(pier, "multiplier3") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time3")}) %>%
release("crane") %>%
log_("finishing trajectory number 3")
)
pier <-
simmer("pier") %>%
add_resource("crane", 2) %>%
add_generator("boat", boat, function() {c(0, rexp(9, 1/1.25), -1)})
pier %>% run(until = 90)
table <-
pier %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$finished), mean(table$waiting_time), max(table$waiting_time), min(table$waiting_time), mean(table$activity_time), max(table$activity_time), min(table$activity_time))
}) %>% unlist()
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats     ",
"Mean waiting time     ", "Maximum waiting time     ",
"Minimum waiting time     ", "Mean download time     ",
"Maximum download time     ", "Minimum download time     ")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
View(table_result)
table_result$`Number of Boats     `
table_result$Number of Boats     `
table_result$Number of Boats
table_result$"Number of Boats"
sd(table_result$"Number of Boats")
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result
table_result <- rbind("standard deviation", sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time"))
table_result <- as.table(table_result)
table_result <- rbind("standard deviation", sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time"))
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- rbind("standard deviation", sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time"))
table_result$"Number of Boats"
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result$"Number of Boats"
table_result <- rbind("standard deviation", sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time"))
table_result
View(table_result)
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time"))
View(table_result)
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"), sd(table_result$"Mean waiting time"), sd(table_result$"Maximum waiting time"), sd(table_result$"Minimum waiting time"), sd(table_result$"Mean download time"), sd(table_result$"Maximum download time"), sd(table_result$"Minimum download time")))
View(table_result)
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "standard deviation")
View(table_result)
as string
"hola" + 5 + "ue"
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time")))
table_result <- rbind(table_result, c("[ " + toString(min(table_result$"Number of Boats")) + " , " + toString(max(table_result$"Number of Boats")) " ]",
"[ " + toString(min(table_result$"Mean waiting time")) + " , " + toString(max(table_result$"Mean waiting time")) " ]",
"[ " + toString(min(table_result$"Maximum waiting time")) + " , " + toString(max(table_result$"Maximum waiting time")) " ]",
"[ " + toString(min(table_result$"Minimum waiting time")) + " , " + toString(max(table_result$"Minimum waiting time")) " ]",
"[ " + toString(min(table_result$"Mean download time")) + " , " + toString(max(table_result$"Mean download time")) " ]",
"[ " + toString(min(table_result$"Maximum download time")) + " , " + toString(max(table_result$"Maximum download time")) " ]",
"[ " + toString(min(table_result$"Minimum download time")) + " , " + toString(max(table_result$"Minimum download time")) " ]"))
pier <-
simmer("pier") %>%
add_resource("crane", 2) %>%
add_generator("boat", boat, function() {c(0, rexp(9, 1/1.25), -1)})
pier %>% run(until = 90)
table <-
pier %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$finished), mean(table$waiting_time), max(table$waiting_time), min(table$waiting_time), mean(table$activity_time), max(table$activity_time), min(table$activity_time))
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
pier <- simmer() %>%
add_resource("crane", 2)
# Create Trajeectory Boat with 3 subtrajectories, one when there are not boats on servers,
# another when there are only one and a third one when both servers are busy
boat <- trajectory() %>%
branch(option = function() get_server_count(pier, "crane") + 1, continue = c(T, T, T),
trajectory("Boat Trajectory 1") %>%
trap("WARNING",
handler = trajectory() %>%
timeout(function(){  (get_attribute(pier, "activity_time1") - now(pier)) * 2  })
) %>%
set_attribute("strat_time1", function (){now(pier)}) %>%
set_attribute("multiplier1", function (){1 / 2}) %>%
set_attribute("activity_time1", function (){get_attribute(pier, "multiplier1") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time1")}) %>%
release("crane") %>%
log_("finishing trajectory number 1"),
trajectory("Boat Trajectory 2") %>%
send("WARNING") %>%
set_attribute("strat_time2", function (){now(pier)}) %>%
set_attribute("multiplier2", function (){1}) %>%
set_attribute("activity_time2", function (){get_attribute(pier, "multiplier2") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time2")}) %>%
release("crane") %>%
log_("finishing trajectory number 2"),
trajectory("Boat Trajectory 3") %>%
set_attribute("strat_time3", function (){now(pier)}) %>%
set_attribute("multiplier3", function (){1}) %>%
set_attribute("activity_time3", function (){get_attribute(pier, "multiplier3") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time3")}) %>%
release("crane") %>%
log_("finishing trajectory number 3")
)
pier <-
simmer("pier") %>%
add_resource("crane", 2) %>%
add_generator("boat", boat, function() {c(0, rexp(9, 1/1.25), -1)})
pier %>% run(until = 90)
table <-
pier %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$finished), mean(table$waiting_time), max(table$waiting_time), min(table$waiting_time), mean(table$activity_time), max(table$activity_time), min(table$activity_time))
}) %>% unlist()
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time")))
table_result <- rbind(table_result, c("[ " + toString(min(table_result$"Number of Boats")) + " , " + toString(max(table_result$"Number of Boats")) " ]",
"[ " + toString(min(table_result$"Mean waiting time")) + " , " + toString(max(table_result$"Mean waiting time")) " ]",
"[ " + toString(min(table_result$"Maximum waiting time")) + " , " + toString(max(table_result$"Maximum waiting time")) " ]",
"[ " + toString(min(table_result$"Minimum waiting time")) + " , " + toString(max(table_result$"Minimum waiting time")) " ]",
"[ " + toString(min(table_result$"Mean download time")) + " , " + toString(max(table_result$"Mean download time")) " ]",
"[ " + toString(min(table_result$"Maximum download time")) + " , " + toString(max(table_result$"Maximum download time")) " ]",
"[ " + toString(min(table_result$"Minimum download time")) + " , " + toString(max(table_result$"Minimum download time")) " ]"))
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time")))
table_result <- rbind(table_result, c("[ " + toString(min(table_result$"Number of Boats")) + " , " + toString(max(table_result$"Number of Boats")) + " ]",
"[ " + toString(min(table_result$"Mean waiting time")) + " , " + toString(max(table_result$"Mean waiting time")) + " ]",
"[ " + toString(min(table_result$"Maximum waiting time")) + " , " + toString(max(table_result$"Maximum waiting time")) + " ]",
"[ " + toString(min(table_result$"Minimum waiting time")) + " , " + toString(max(table_result$"Minimum waiting time")) + " ]",
"[ " + toString(min(table_result$"Mean download time")) + " , " + toString(max(table_result$"Mean download time")) + " ]",
"[ " + toString(min(table_result$"Maximum download time")) + " , " + toString(max(table_result$"Maximum download time")) + " ]",
"[ " + toString(min(table_result$"Minimum download time")) + " , " + toString(max(table_result$"Minimum download time")) + " ]"))
"d" + toString(5)
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time")))
table_result <- rbind(table_result, c(paste("[ ",toString(min(table_result$"Number of Boats"))," , ",toString(max(table_result$"Number of Boats"))," ]"),
paste("[ ",toString(min(table_result$"Mean waiting time"))," , ",toString(max(table_result$"Mean waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum waiting time"))," , ",toString(max(table_result$"Maximum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum waiting time"))," , ",toString(max(table_result$"Minimum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Mean download time"))," , ",toString(max(table_result$"Mean download time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum download time"))," , ",toString(max(table_result$"Maximum download time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum download time"))," , ",toString(max(table_result$"Minimum download time"))," ]")
))
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "standard deviation", "range")
View(table_result)
View(table_result)
View(table_result)
View(table_result)
install.packages("gridExtra")
library("grid", lib.loc="/usr/lib/R/library")
library(griExtra)
library(gridExtra)
pdf("data.pdf", table_result)
write.csv(table_result, "pierResult.csv")
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
table_result <- rbind(table_result, c(paste("[ ",toString(min(table_result$"Number of Boats"))," , ",toString(max(table_result$"Number of Boats"))," ]"),
paste("[ ",toString(min(table_result$"Mean waiting time"))," , ",toString(max(table_result$"Mean waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum waiting time"))," , ",toString(max(table_result$"Maximum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum waiting time"))," , ",toString(max(table_result$"Minimum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Mean download time"))," , ",toString(max(table_result$"Mean download time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum download time"))," , ",toString(max(table_result$"Maximum download time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum download time"))," , ",toString(max(table_result$"Minimum download time"))," ]")
))
table_result <- rbind(table_result, c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time")))
library(simmer)
library(magrittr)
library(parallel)
seeds <- c(393943, 100005, 777999555, 319999772, 4544, 55454, 5468, 6554, 7945, 545121, 7455, 554, 78955, 232554, 58515, 54955)
result <- mclapply(seeds, function(the_seed) {
set.seed(the_seed)
pier <- simmer() %>%
add_resource("crane", 2)
# Create Trajeectory Boat with 3 subtrajectories, one when there are not boats on servers,
# another when there are only one and a third one when both servers are busy
boat <- trajectory() %>%
branch(option = function() get_server_count(pier, "crane") + 1, continue = c(T, T, T),
trajectory("Boat Trajectory 1") %>%
trap("WARNING",
handler = trajectory() %>%
timeout(function(){  (get_attribute(pier, "activity_time1") - now(pier)) * 2  })
) %>%
set_attribute("strat_time1", function (){now(pier)}) %>%
set_attribute("multiplier1", function (){1 / 2}) %>%
set_attribute("activity_time1", function (){get_attribute(pier, "multiplier1") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time1")}) %>%
release("crane") %>%
log_("finishing trajectory number 1"),
trajectory("Boat Trajectory 2") %>%
send("WARNING") %>%
set_attribute("strat_time2", function (){now(pier)}) %>%
set_attribute("multiplier2", function (){1}) %>%
set_attribute("activity_time2", function (){get_attribute(pier, "multiplier2") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time2")}) %>%
release("crane") %>%
log_("finishing trajectory number 2"),
trajectory("Boat Trajectory 3") %>%
set_attribute("strat_time3", function (){now(pier)}) %>%
set_attribute("multiplier3", function (){1}) %>%
set_attribute("activity_time3", function (){get_attribute(pier, "multiplier3") * runif(1, 0.5, 1.5)}) %>%
seize("crane") %>%
timeout(function() {get_attribute(pier, "activity_time3")}) %>%
release("crane") %>%
log_("finishing trajectory number 3")
)
pier <-
simmer("pier") %>%
add_resource("crane", 2) %>%
add_generator("boat", boat, function() {c(0, rexp(9, 1/1.25), -1)})
pier %>% run(until = 90)
table <-
pier %>%
get_mon_arrivals %>%
dplyr::mutate(waiting_time = end_time - start_time - activity_time)
table
c(sum(table$finished), mean(table$waiting_time), max(table$waiting_time), min(table$waiting_time), mean(table$activity_time), max(table$activity_time), min(table$activity_time))
}) %>% unlist()
result
table_result <- matrix(result,ncol=7,byrow=TRUE)
colnames(table_result) <- c("Number of Boats",
"Mean waiting time", "Maximum waiting time",
"Minimum waiting time", "Mean download time",
"Maximum download time", "Minimum download time")
table_result <- as.table(table_result)
# Table of results.
table_result <- as.data.frame.matrix(table_result)
range <- c(paste("[ ",toString(min(table_result$"Number of Boats"))," , ",toString(max(table_result$"Number of Boats"))," ]"),
paste("[ ",toString(min(table_result$"Mean waiting time"))," , ",toString(max(table_result$"Mean waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum waiting time"))," , ",toString(max(table_result$"Maximum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum waiting time"))," , ",toString(max(table_result$"Minimum waiting time"))," ]"),
paste("[ ",toString(min(table_result$"Mean download time"))," , ",toString(max(table_result$"Mean download time"))," ]"),
paste("[ ",toString(min(table_result$"Maximum download time"))," , ",toString(max(table_result$"Maximum download time"))," ]"),
paste("[ ",toString(min(table_result$"Minimum download time"))," , ",toString(max(table_result$"Minimum download time"))," ]"))
sd <- c(sd(table_result$"Number of Boats"),
sd(table_result$"Mean waiting time"),
sd(table_result$"Maximum waiting time"),
sd(table_result$"Minimum waiting time"),
sd(table_result$"Mean download time"),
sd(table_result$"Maximum download time"),
sd(table_result$"Minimum download time"))
table_result <- rbind(table_result, range)
table_result <- rbind(table_result, sd)
rownames(table_result) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "range", "standard deviation")
View(table_result)
write.csv(table_result, "~/simulators/Modeling_And_Simulations/boats/pierResult.csv")
[1:3]
rnorm[1:99]
c(1,2,3)
rnorm(100)
rnorm[1:98]
c(1,2,3,4)[1:3]
r.norm<-rnorm(100)
x.cor<-
r.norm[1:98]+r.norm[2:99]+r.norm[3:10
0]
x.cor<-r.norm[1:98]+r.norm[2:99]+r.norm[3:100]
acf(x.cor)
acf(r.norm)
acf(x.cor)
acf(r.norm)
r.norm<-rnorm(100)
x.cor<-r.norm[1:98]+r.norm[2:99]+r.norm[3:100]
lag.plot(x.cor,lags=4,layout=c(2,2),labels=F,do.lines=F)
lag.plot(r.norm,lags=4,layout=c(2,2),labels=F,do.lines=F)
lag.plot(r.norm,lags=4,layout=c(2,2),labels=F,do.lines=F)
lag.plot(x.cor,lags=4,layout=c(2,2),labels=F,do.lines=F)
numeric(4)
numeric(4)
numeric(5)
numeric(5,1)
numeric(5)
acf(r.norm)
setwd("~/Documents/modelado_y_simulacion/ejercicio1")
library(e1071)
t.llega = scan("ejercicio.txt")
n =length(t.llega)
acf(t.llega)
ts.plot(t.llega)
lag.plot(t.llega,lags=4,layout=c(2,2),labels=F,do.lines=F)
hist(t.llega,prob=T)
lines(density(t.llega))
setwd("~/Documents/modelado_y_simulacion/tareaModEntradas")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
datos <-load("PreMensual.RData")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
datos <-load("PreMensual.RData")
mayo_d <- byMonth %>%
filter(M==5)
head(mayo_d)
mayo <- mayo_d$P
mayo
acf(mayo)
hist(mayo,prob=T)
summary(mayo)
var(mayo)
cvar = sd(mayo)/mean(mayo)
cvar
skewness(mayo)
library(MASS)
gamma.par =fitdistr(t.llega,"gamma")
library(MASS)
gamma.par =fitdistr(t.llega,"gamma")
gamma.par
weib.par =fitdistr(t.llega,"weibull")
weib.par
exp.par =fitdistr(mayo,"exponential")
exp.par
lambda =fitdistr(mayo,"exponential")
lambda
par(mfrow=c(1,2))
curve(pgamma(x,shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]),from=0, to=20,ylab="Probabilidad acumulada",col="red",lwd=2, main="Gamma")
lines(ecdf(t.llega))
curve(pgamma(x,shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]),from=0, to=20,ylab="Probabilidad acumulada",col="red",lwd=2, main="Gamma")
par(mfrow=c(1,2))
curve(pgamma(x,shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]),from=0, to=20,ylab="Probabilidad acumulada",col="red",lwd=2, main="Gamma")
lines(ecdf(t.llega))
qqline(t.llega, distribution = function(p)
qgamma(p, shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]),prob = c(0.25, 0.75), col = 2)
par(mfrow=c(1,2))
qqplot(qgamma(ppoints(500), shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]), t.llega, main ="Gamma",xlab="cuantiles teóricos",ylab="cuantiles muestrales" )
qqline(t.llega, distribution = function(p)
qgamma(p, shape=gamma.par$estimate[1],rate=gamma.par$estimate[2]),prob = c(0.25, 0.75), col = 2)
qqplot(qweibull(ppoints(500), shape=weib.par$estimate[1],scale=weib.par$estimate[2]), t.llega, main ="Weibull",xlab="cuantiles teóricos",ylab="cuantiles muestrales" )
qqline(t.llega, distribution = function(p)
qweibull(p, shape=weib.par$estimate[1],scale=weib.par$estimate[2]),prob = c(0.25, 0.75), col = 2)
skewness(mayo)
skewness(c(1,2,3))
setwd("~/simulators/Modeling_And_Simulations/Modelizacion_de_las_Entradas")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(e1071)
datos <-load("PreMensual.RData")
mayo_d <- byMonth %>%
filter(M==5)
head(mayo_d)
mayo <- mayo_d$P
mayo
acf(mayo)
hist(mayo,prob=T)
summary(mayo)
var(mayo)
cvar = sd(mayo)/mean(mayo)
cvar
skewness(mayo)
library(MASS)
library(MASS)
lambda =fitdistr(mayo,"exponential")
lambda
